# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

function parse_git_branch {
	git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\ \[\1\]/'
}

HOST_COLOR='32m'
HOST_HICOLOR=86

if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
else
	color_prompt=no
fi

if [ "$color_prompt" = yes ]; then
    if [[ $(tput colors) -ge 256 ]]; then
        C_NUM="\[$(tput setaf 230)\]"
        C_GIT="\[$(tput setaf 156)\]"
        C_DIR="\[$(tput setaf 75)\]"
        C_HOST="\[\$(tput setaf ${HOST_HICOLOR})\]"
    else
        C_NUM="\[\e[0;33m\]"
        C_GIT="\[\e[0;32m\]"
        C_DIR="\[\e[01;34m\]"
        C_HOST="\[\e[${HOST_COLOR}\]"
    fi
    C_NO="\[\e[00m\]"
	PS1="${C_NUM}[\!] \D{%a %R}${C_NO}${C_GIT}\$(parse_git_branch) ${C_DIR}\w${C_NO}\n${C_HOST}\u@\h${C_NO} \\$ "
else
	PS1="[\!] \D{%a %R}$(parse_git_branch) \w\n\u@\h \\$ "
fi
unset color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
	xterm*|rxvt*)
		PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
		;;
	*)
		;;
esac


# vim: ft=sh
