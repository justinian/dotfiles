# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

function parse_git_branch {
	git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\ \[\1\]/'
}

HOST_COLOR='32m'

if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
else
	color_prompt=
fi

if [ "$color_prompt" = yes ]; then
	PS1="\[\e[0;33m\][\!] \D{%a %R}\[\e[0m\]\[\e[0;32m\]$(parse_git_branch) \[\e[01;34m\]\w\[\e[00m\]\n\[\e[${HOST_COLOR}\]\u@\h\[\e[00m\] \$ "
	#PS1="\[\e[0;33m\][\!]\[\e[0m\]\[\e[0;32m\]\$(parse_git_branch) \[\e[01;34m\]\w\[\e[00m\]\n\[\e[\${HOST_COLOR}\]\u@\h\[\e[00m\] \$ "
	#PS1="\[\$(set_host_color)\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\[\033[0;32m\]\$(parse_git_branch) \[\033[0m\]\$ "
else
	PS1="\u@\h:\w\$(parse_git_branch) \$ "
fi
unset color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
	xterm*|rxvt*)
		PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
		;;
	*)
		;;
esac


# vim: ft=sh
